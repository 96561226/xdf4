<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.mapper.income.IncomeMapper">
    <resultMap id="tbIncomeVoMap" type="com.aaa.pojo.finance.TbIncomeVo">
        <result column="income_id" jdbcType="INTEGER" property="incomeId" />
        <result column="income_no" jdbcType="VARCHAR" property="incomeNo" />
        <result column="income_date" jdbcType="DATE" property="incomeDate" />
        <result column="involve_type" jdbcType="INTEGER" property="involveType" />
        <result column="payment_type" jdbcType="VARCHAR" property="paymentType" />
        <result column="money" jdbcType="INTEGER" property="money" />
        <result column="gathering" jdbcType="INTEGER" property="gathering" />
        <result column="gathering_name" jdbcType="VARCHAR" property="gatheringName" />
        <result column="register" jdbcType="INTEGER" property="register" />
        <result column="register_name" jdbcType="VARCHAR" property="registerName" />
        <result column="emp_id" jdbcType="INTEGER" property="empId" />
        <result column="emp_name" jdbcType="VARCHAR" property="empName" />
        <result column="dept_id" jdbcType="INTEGER" property="deptId" />
        <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
        <result column="units" jdbcType="VARCHAR" property="units" />
        <result column="contract" jdbcType="INTEGER" property="contract" />
        <result column="pname" jdbcType="VARCHAR" property="pname" />
        <result column="income_declare" jdbcType="VARCHAR" property="incomeDeclare" />
        <result column="state" jdbcType="INTEGER" property="state" />
        <result column="state_name" jdbcType="VARCHAR" property="stateName" />
    </resultMap>

    <insert id="addIncome" parameterType="com.aaa.pojo.finance.TbIncome">
        insert into tb_income(income_no, income_date,
         involve_type, money, gathering,
         register, emp_id, dept_id, units,
         contract, income_declare,state)
        values(
            #{incomeNo},now(),#{involveType},
            #{money},#{gathering},#{register},#{empId},#{deptId},
            #{units},#{contract},#{incomeDeclare},#{state}
        );
    </insert>

    <select id="selIncomeNo" resultType="java.lang.String">
        select CONCAT("SZ-",(select right(1000000+(select max(income_id)+1 from tb_income),6)))
    </select>
    <resultMap id="tbPaymentTypeMap" type="com.aaa.pojo.finance.TbPaymentType">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="payment_type" jdbcType="VARCHAR" property="paymentType" />
    </resultMap>
    <select id="selectAllPaymentType" resultMap="tbPaymentTypeMap">
        select * from tb_payment_type
    </select>
    <resultMap id="tbGatheringMap" type="com.aaa.pojo.finance.TbGathering">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="gathering_name" jdbcType="VARCHAR" property="gathering_name" />
    </resultMap>
    <select id="selectAllGathering" resultMap="tbGatheringMap">
        select * from tb_gathering
    </select>
    <select id="selectIncome" parameterType="com.aaa.pojo.finance.SearchIncome" resultMap="tbIncomeVoMap">
        select income.*,gathering.gathering_name,payment.payment_type,
                emp.emp_name register_name,emp1.emp_name,dept.dept_name,
                tis.state_name,tp.pname
         from tb_income income
        left join tb_gathering gathering
        on income.gathering = gathering.id
        left join tb_payment_type payment
        on income.involve_type = payment.id
        left join tb_emp emp
        on income.register = emp.emp_id
        left join tb_emp emp1
        on income.emp_id = emp1.emp_id
        left join tb_dept dept
        on income.dept_id = dept.dept_id
        left join tb_income_state tis
        on income.state = tis.id
        left join tb_pact tp
        on income.contract = tp.p_id
        <trim prefix="where" prefixOverrides="and">
            <if test="incomeId != null">
                and income.income_id = #{incomeId}
            </if>
            <if test="incomeNo != null">
                and income.income_no like "%"#{incomeNo}"%"
            </if>
            <if test="register != null">
                and income.register = #{register}
            </if>
            <if test="empId != null">
                and income.emp_id = #{empId}
            </if>
            <if test="deptId != null">
                and income.dept_id = #{deptId}
            </if>
            <if test="gathering != null">
                and income.gathering = #{gathering}
            </if>
            <if test="involveType != null">
                and income.involve_type = #{involveType}
            </if>
            <if test="state != null">
                and income.state = #{state}
            </if>
        </trim>
        order by income.income_id desc
    </select>
</mapper>